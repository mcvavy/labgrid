replicaCount: 2

vikunjaEnvironment:
- name: VIKUNJA_SERVICE_PUBLICURL
  value: https://vikunja.labgrid.net
- name: VIKUNJA_MAILER_ENABLED
  value: "true"
- name: VIKUNJA_MAILER_FROM
  value: "notifications@email.labgrid.net"
- name: VIKUNJA_MAILER_HOST
  value: "email-smtp.eu-north-1.amazonaws.com"
- name: VIKUNJA_MAILER_PORT
  value: "587"
- name: VIKUNJA_MAILER_AUTHTYPE
  value: "login"
- name: VIKUNJA_MAILER_USERNAME
  valueFrom:
    secretKeyRef:
      name: azure-credential
      key: AWS_SMTP_USERNAME
- name: VIKUNJA_MAILER_PASSWORD
  valueFrom:
    secretKeyRef:
      name: azure-credential
      key: AWS_SMTP_PASSWORD
- name: VIKUNJA_DATABASE_TYPE
  value: "postgres"
- name: DB_POSTGRESDB_HOST
  valueFrom:
    secretKeyRef:
      name: vikunja-pgcluster-app
      key: host
- name: DB_POSTGRESDB_PORT
  valueFrom:
    secretKeyRef:
      name: vikunja-pgcluster-app
      key: port
- name: VIKUNJA_DATABASE_DATABASE
  valueFrom:
    secretKeyRef:
      name: vikunja-pgcluster-app
      key: dbname
- name: VIKUNJA_DATABASE_USER
  valueFrom:
    secretKeyRef:
      name: vikunja-pgcluster-app
      key: username
- name: VIKUNJA_DATABASE_PASSWORD
  valueFrom:
    secretKeyRef:
      name: vikunja-pgcluster-app
      key: password

ingress:
  enabled: true
  className: "nginx"
  annotations:
    cert-manager.io/cluster-issuer: "letsencrypt-production"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
  hosts:
    - host: vikunja.labgrid.net
      paths:
        - path: /
          pathType: ImplementationSpecific


# Additional volumes on the output Deployment definition.
volumes:
- name: vikunja-data
  persistentVolumeClaim:
    claimName: vikunja-storage

# Additional volumeMounts on the output Deployment definition.
volumeMounts:
- name: vikunja-data
  mountPath: "/home/node/.vikunja"

nodeSelector: {}

tolerations: []

affinity: {}


persistentVolumeClaim:
  create: true
  accessMode: ReadWriteMany
  volumeMode: Filesystem
  size: 1Gi
  storageClassName: "synology-nfs-delete"
  existingPersistentVolumeClaim: ''
  annotations: {}
  # -- Additional labels for the persistent volume claim object.
  labels: {}

databaseCredential:
  secretName: vikunja-pgcluster-app

initContainer:
  command:
    - sh
    - -c
    - |
      until pg_isready -h "$VIKUNJA_PGCLUSTER_RW_SERVICE_HOST" -p 5432; do 
        echo Waiting for the database to be ready...; 
        sleep 5; 
      done;


pgcluster:
  enabled: true
  type: postgresql

  version:
    # -- PostgreSQL major version to use
    postgresql: "17"

  mode: standalone

  cluster:
    instances: 1
    imageName: "ghcr.io/cloudnative-pg/postgresql:17.2"
    imagePullPolicy: IfNotPresent

    storage:
      size: 8Gi
      storageClass: "synology-iscsi-delete"

    resources:
      requests:
        memory: "512Mi"
        cpu: "1"
      limits:
        memory: "1Gi"
        cpu: "2"

    priorityClassName: ""
    primaryUpdateMethod: switchover
    primaryUpdateStrategy: unsupervised
    logLevel: "info"

    affinity:
      enablePodAntiAffinity: true
      topologyKey: topology.kubernetes.io/zone

    enableSuperuserAccess: true

    enablePDB: true

    initdb:
      database: "vikunja"
      owner: "labgridappuser"


  backups:
    enabled: true
    # Azure: https://<storageAccount>.<serviceName>.core.windows.net/<containerName><path>
    destinationPath: "https://labgrid.blob.core.windows.net/vikunja-pg-backup"
    # -- One of `s3`, `azure` or `google`
    provider: azure
    azure:
      path: "/"
      connectionString: ""
      storageAccount: ""
      storageKey: ""
      storageSasToken: ""
      containerName: ""
      serviceName: blob
      inheritFromAzureAD: false
    secret:
      create: false
      name: "azure-credential"

    wal:
      # -- WAL compression method. One of `` (for no compression), `gzip`, `bzip2` or `snappy`.
      compression: gzip
      # -- Whether to instruct the storage provider to encrypt WAL files. One of `` (use the storage container default), `AES256` or `aws:kms`.
      encryption: AES256
      # -- Number of WAL files to be archived or restored in parallel.
      maxParallel: 1
    data:
      # -- Data compression method. One of `` (for no compression), `gzip`, `bzip2` or `snappy`.
      compression: gzip
      # -- Whether to instruct the storage provider to encrypt data files. One of `` (use the storage container default), `AES256` or `aws:kms`.
      encryption: AES256
      # -- Number of data files to be archived or restored in parallel.
      jobs: 2

    scheduledBackups:
      -
        # -- Scheduled backup name
        name: scheduled-backup
        # -- Schedule in cron format
        schedule: "0 0 0 * * *"
        # schedule: "0 0 0 * * 1,4,7"
        # -- Backup owner reference
        backupOwnerReference: self
        # -- Backup method, can be `barmanObjectStore` (default) or `volumeSnapshot`
        method: barmanObjectStore

    # -- Retention policy for backups
    retentionPolicy: "14d"

  externalSecretBackupCredentials:
    enabled: true
    name: azure-credential
    refreshInterval: "1h"
    secretStoreRef:
      name: azure-kv-cluster-store
      kind: ClusterSecretStore
    data:
      - secretKey: AZURE_STORAGE_ACCOUNT
        remoteRef:
          key: labgrid-storage-account-name
      - secretKey: AZURE_STORAGE_SAS_TOKEN
        remoteRef:
          key: vikunja-pg-backup-sas-token
