keycloak:
  global:
    defaultStorageClass: "local-path"
  replicaCount: 1
  image:
    debug: true

  externalDatabase:
    existingSecret: "iam-stg-pgcluster-app"

  initContainers:
    - name: wait-for-postgres-cluster
      image: postgres:latest
      command:
        - sh
        - -c
        - |
          until pg_isready -h "$IAM_STG_PGCLUSTER_RW_SERVICE_HOST" -p 5432; do 
            echo Waiting for the database to be ready...; 
            sleep 5; 
          done;

  ingress:
    enabled: true
    hostnameStrict: true
    hostname: "iam-stg-local.labgrid.net"
    ingressClassName: "nginx"
    path: "/"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt-staging"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    tls: true
    extraHosts:
      - name: "iam-stg.labgrid.net"
        path: "/" 

  extraEnvVars:
    - name: KEYCLOAK_LOG_LEVEL
      value: DEBUG


pgcluster:
  enabled: true
  type: postgresql

  version:
    # -- PostgreSQL major version to use
    postgresql: "17"

  mode: standalone

  cluster:
    instances: 1
    imageName: "ghcr.io/cloudnative-pg/postgresql:17.2"
    imagePullPolicy: IfNotPresent

    storage:
      size: 2Gi
      storageClass: "local-path"

    resources:
      requests:
        memory: "512Mi"
        cpu: "1"
      limits:
        memory: "1Gi"
        cpu: "2"

    priorityClassName: ""
    primaryUpdateMethod: switchover
    primaryUpdateStrategy: unsupervised
    logLevel: "info"

    affinity:
      enablePodAntiAffinity: true
      topologyKey: topology.kubernetes.io/zone

    enableSuperuserAccess: true
    # superuserSecret: "postgres-superuser-external-secret"

    enablePDB: true

    initdb:
      database: "appdb"
      owner: "labgridappuser"
      # secret:
      #   name: "iam-postgres-app-user"


  backups:
    enabled: false
