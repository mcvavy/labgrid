# fullnameOverride: "labgrid-iam"
# nameOverride: ""
namespaceOverride: "labgrid-identity-system"


#Shared variables
localSettings:
  keycloak-certificate: &keycloak-certificate keycloak-tls-certificate


keycloak:
  global:
    defaultStorageClass: "synology-iscsi-delete"
  fullnameOverride: "keycloak"
  ## Production values.yaml for Bitnamiâ€™s Keycloak chart

  # Scale up for HA (ensure your external DB can handle multiple connections)
  replicaCount: 1

  image:
    debug: true

  extraEnvVars:
    - name: KEYCLOAK_LOG_LEVEL
      value: DEBUG

  production: true

  auth:
    adminUser: user
    adminPassword: "password01"
  
  # Enable TLS
  tls:
    # enabled: true
    autoGenerated: false
    existingSecret: *keycloak-certificate # Secret created by cert-manager

  livenessProbe:
    initialDelaySeconds: 120


  readinessProbe:
    initialDelaySeconds: 120
  
  proxy: edge
  
  initContainers:
    - name: wait-for-postgres-cluster
      image: postgres:latest
      command:
        - sh
        - -c
        - |
          until pg_isready -h "$PGCLUSTER_RW_SERVICE_HOST" -p 5432; do 
            echo Waiting for the database to be ready...; 
            sleep 5; 
          done;

  # Recommended resource requests and limits for production
  resources:
    requests:
      cpu: 500m
      memory: 1024Mi
    limits:
      cpu: 1
      memory: 2048Mi

  metrics:
    enabled: true

  # Ingress configuration
  ingress:
    enabled: true
    hostnameStrict: true
    hostname: "iam.local.labgrid.net"
    ingressClassName: "nginx"
    path: "/"
    annotations:
      cert-manager.io/cluster-issuer: "letsencrypt"
      nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
      nginx.ingress.kubernetes.io/force-ssl-redirect: "true"
    tls: true
    extraHosts:
      - name: "iam.labgrid.net"
        path: "/"

  # Database configuration (external)
  postgresql:
    enabled: false # Disable internal PostgreSQL
  externalDatabase:
    existingSecret: "pgcluster-app"  # Name of the secret generated by CloudNativePG
    existingSecretHostKey: "host" # Key in the secret containing the database host
    existingSecretPortKey: "port" # Key in the secret containing the database port
    existingSecretUserKey: "username" # Key in the secret containing the database user
    existingSecretDatabaseKey: "dbname" # Key in the secret containing the database name
    existingSecretPasswordKey: "password" # Key in the secret containing the database password


keycloakCertificate:
  enabled: true
  name: "keycloak-certificate"
  secretName: *keycloak-certificate
  issuerRef:
    name: "letsencrypt"
    kind: "ClusterIssuer"
  commonName: "iam.local.labgrid.net"
  dnsNames:
    - "iam.labgrid.net"
    - "iam.local.labgrid.net"


pgcluster:
  enabled: true
  fullnameOverride: "pgcluster"
  name: "labgrid-iam"
  description: "Postgres Database Clsutering for Labgrid IAM"
  imageName: "ghcr.io/cloudnative-pg/postgresql:17.2"
  instances: 1
  startDelay: 300
  stopDelay: 300
  primaryUpdateStrategy: "unsupervised"

  postgresql:
    parameters:
      shared_buffers: "256MB"
      pg_stat_statements:
        max: "10000"
        track: "all"
      auto_explain:
        log_min_duration: "10s"

  bootstrap:
    initdb:
      database: "labgrid-iam"
      owner: "labgridappuser"
      secret:
        name: "iam-postgres-app-user"

  enableSuperuserAccess: true
  superuserSecret:
    name: "postgres-superuser-external-secret"

  storage:
    storageClass: "synology-iscsi-delete"
    size: "1Gi"
  walStorage:
    size: "1Gi"


  backup:
    barmanObjectStore:
      destinationPath: "https://labgrid.blob.core.windows.net/labgrid-iam"
      azureCredentials:
        storageAccount:
          name: "azure-credential"
          key: "labgrid-storage-account-name"
        storageSasToken:
          name: "azure-credential"
          key: "labgrid-blob-sas-token"
      wal:
        compression: "gzip"
        encryption: "AES256"
      data:
        compression: "gzip"
        encryption: "AES256"
    retentionPolicy: "14d"

  resources:
    requests:
      memory: "512Mi"
      cpu: "1"
    limits:
      memory: "1Gi"
      cpu: "2"

  managed:
    services:
      disabledDefaultServices:
        - "ro"
        - "r"
      additional:
        - selectorType: "rw"
          serviceTemplate:
            metadata:
              name: "labgrid-iam-db-svc"
              labels:
                labgrid-db-pool: "postgres-pool"
              annotations:
                external-dns.alpha.kubernetes.io/hostname: "labgrid-iam-db.labgrid.net"
            spec:
              type: "ClusterIP"

  affinity:
    enablePodAntiAffinity: true
    topologyKey: "failure-domain.beta.kubernetes.io/zone"

  nodeMaintenanceWindow:
    inProgress: false
    reusePVC: false

  externalSecretBackupCredentials:
    name: azure-credential
    refreshInterval: "1h"
    secretStoreRef:
      name: azure-kv-cluster-store
      kind: ClusterSecretStore
    data:
      - secretKey: labgrid-storage-account-name
        remoteRef:
          key: labgrid-storage-account-name
      - secretKey: labgrid-blob-sas-token
        remoteRef:
          key: labgrid-blob-sas-token

  externalSecretPostgresAppUser:
    name: iam-postgres-app-user
    refreshInterval: "1h"
    secretStoreRef:
      name: azure-kv-cluster-store
      kind: ClusterSecretStore
    target:
      template:
        type: kubernetes.io/basic-auth
    data:
      - secretKey: username
        remoteRef:
          key: iam-postgres-username
      - secretKey: password
        remoteRef:
          key: iam-postgres-password
